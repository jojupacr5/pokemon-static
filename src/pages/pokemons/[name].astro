---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponseTs, Result } from "../../interfaces/pokemon-list.response";

import Layout from "@layouts/Layout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from "@components/shared/Title.astro";
import { Icon } from 'astro-icon/components'

export const getStaticPaths = (async () => {
  
  const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
  const { results } = await resp.json() as PokemonListResponseTs;

  return results.map(result => ({
    params: { name: result.name },
    props: { name: result.name, url: result.url }
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`
const imgSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<Layout 
  title={`Pokémon - #${id} ${name}`}
  description={`Información sobre el pokémon ${name}`}
  image={imgSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div>
        <button 
          onclick="history.back()"
          class="bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded hover:cursor-pointer mb-2"
        >
          Regresar
        </button>
        <Title>{ name }</Title>
      </div>
  
      <button 
        id="btn-favorite"
        class="ml-4 hover:animate-pulse hover:cursor-pointer text-red-500"
        data-name={name} 
        data-id={id}  
      >
        <Icon data-outline name="heart-outline" size={50} />
        <Icon data-full class="hidden" name="heart-full" size={50} />
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig />
    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</Layout>

<script>
interface FavoritePokemon {
  name: string;
  id: number;
}

const handlePageLoad = () => {

  let favoritePokemons: FavoritePokemon[] = JSON.parse(
    localStorage.getItem('favorites') ?? '[]'
  );

  const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement;
  if(!btnFavorite) return;

  const name = btnFavorite.dataset.name ?? '';
  const id = btnFavorite.dataset.id ?? '';

  const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
  const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;

  const toggleFavorite = () => {
    const isFavorite = favoritePokemons.some(fav => fav.name === name);

    if ( isFavorite ) {
      // remover
      favoritePokemons = favoritePokemons.filter( fav => fav.name !== name);
    } else {
      // agregar
      favoritePokemons.push({
        id: +id,
        name: name
      })
    }

    localStorage.setItem('favorites', JSON.stringify(favoritePokemons));
  }

  btnFavorite.addEventListener('click', () =>{
    heartOutline.classList.toggle('hidden');
    heartFull.classList.toggle('hidden');

    toggleFavorite();
  });
}

document.addEventListener('astro:page-load', handlePageLoad);
</script>